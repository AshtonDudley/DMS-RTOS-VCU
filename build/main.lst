ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB143:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "cmsis_os.h"
  22:Core/Src/main.c **** #include "usb_host.h"
  23:Core/Src/main.c **** #include <stm32f4xx_hal_rcc.h>
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  26:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* USER CODE END Includes */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  31:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 2


  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* USER CODE END PTD */
  34:Core/Src/main.c **** 
  35:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  36:Core/Src/main.c **** /* USER CODE BEGIN PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* USER CODE END PD */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  41:Core/Src/main.c **** /* USER CODE BEGIN PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE END PM */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  46:Core/Src/main.c **** I2C_HandleTypeDef hi2c1;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** I2S_HandleTypeDef hi2s3;
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Definitions for blink01 */
  53:Core/Src/main.c **** osThreadId_t blink01Handle;
  54:Core/Src/main.c **** const osThreadAttr_t blink01_attributes = {
  55:Core/Src/main.c ****   .name = "blink01",
  56:Core/Src/main.c ****   .stack_size = 128 * 4,
  57:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityNormal,
  58:Core/Src/main.c **** };
  59:Core/Src/main.c **** /* Definitions for blink02 */
  60:Core/Src/main.c **** osThreadId_t blink02Handle;
  61:Core/Src/main.c **** const osThreadAttr_t blink02_attributes = {
  62:Core/Src/main.c ****   .name = "blink02",
  63:Core/Src/main.c ****   .stack_size = 128 * 4,
  64:Core/Src/main.c ****   .priority = (osPriority_t) osPriorityLow,
  65:Core/Src/main.c **** };
  66:Core/Src/main.c **** /* USER CODE BEGIN PV */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* USER CODE END PV */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  71:Core/Src/main.c **** void SystemClock_Config(void);
  72:Core/Src/main.c **** static void MX_GPIO_Init(void);
  73:Core/Src/main.c **** static void MX_I2C1_Init(void);
  74:Core/Src/main.c **** static void MX_I2S3_Init(void);
  75:Core/Src/main.c **** static void MX_SPI1_Init(void);
  76:Core/Src/main.c **** void StartBlink01(void *argument);
  77:Core/Src/main.c **** void StartBlink02(void *argument);
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c **** /* USER CODE END PFP */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  84:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c **** /* USER CODE END 0 */
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** /**
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 3


  89:Core/Src/main.c ****   * @brief  The application entry point.
  90:Core/Src/main.c ****   * @retval int
  91:Core/Src/main.c ****   */
  92:Core/Src/main.c **** int main(void)
  93:Core/Src/main.c **** {
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 102:Core/Src/main.c ****   HAL_Init();
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Configure the system clock */
 109:Core/Src/main.c ****   SystemClock_Config();
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Initialize all configured peripherals */
 116:Core/Src/main.c ****   MX_GPIO_Init();
 117:Core/Src/main.c ****   MX_I2C1_Init();
 118:Core/Src/main.c ****   MX_I2S3_Init();
 119:Core/Src/main.c ****   MX_SPI1_Init();
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Init scheduler */
 125:Core/Src/main.c ****   osKernelInitialize();
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_MUTEX */
 128:Core/Src/main.c ****   /* add mutexes, ... */
 129:Core/Src/main.c ****   /* USER CODE END RTOS_MUTEX */
 130:Core/Src/main.c **** 
 131:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_SEMAPHORES */
 132:Core/Src/main.c ****   /* add semaphores, ... */
 133:Core/Src/main.c ****   /* USER CODE END RTOS_SEMAPHORES */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_TIMERS */
 136:Core/Src/main.c ****   /* start timers, add new ones, ... */
 137:Core/Src/main.c ****   /* USER CODE END RTOS_TIMERS */
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_QUEUES */
 140:Core/Src/main.c ****   /* add queues, ... */
 141:Core/Src/main.c ****   /* USER CODE END RTOS_QUEUES */
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /* Create the thread(s) */
 144:Core/Src/main.c ****   /* creation of blink01 */
 145:Core/Src/main.c ****   blink01Handle = osThreadNew(StartBlink01, NULL, &blink01_attributes);
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 4


 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /* creation of blink02 */
 148:Core/Src/main.c ****   blink02Handle = osThreadNew(StartBlink02, NULL, &blink02_attributes);
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_THREADS */
 151:Core/Src/main.c ****   /* add threads, ... */
 152:Core/Src/main.c ****   /* USER CODE END RTOS_THREADS */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****   /* USER CODE BEGIN RTOS_EVENTS */
 155:Core/Src/main.c ****   /* add events, ... */
 156:Core/Src/main.c ****   /* USER CODE END RTOS_EVENTS */
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /* Start scheduler */
 159:Core/Src/main.c ****   osKernelStart();
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /* We should never get here as control is now taken by the scheduler */
 162:Core/Src/main.c **** 
 163:Core/Src/main.c ****   /* Infinite loop */
 164:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 165:Core/Src/main.c ****   while (1)
 166:Core/Src/main.c ****   {
 167:Core/Src/main.c ****     /* USER CODE END WHILE */
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c ****   /* USER CODE END 3 */
 172:Core/Src/main.c **** }
 173:Core/Src/main.c **** 
 174:Core/Src/main.c **** /**
 175:Core/Src/main.c ****   * @brief System Clock Configuration
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** void SystemClock_Config(void)
 179:Core/Src/main.c **** {
 180:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 181:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 184:Core/Src/main.c ****   */
 185:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 186:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 187:Core/Src/main.c **** 
 188:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 189:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 192:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 198:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 199:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 200:Core/Src/main.c ****   {
 201:Core/Src/main.c ****     Error_Handler();
 202:Core/Src/main.c ****   }
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 5


 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 205:Core/Src/main.c ****   */
 206:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 207:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 208:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 209:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 211:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 214:Core/Src/main.c ****   {
 215:Core/Src/main.c ****     Error_Handler();
 216:Core/Src/main.c ****   }
 217:Core/Src/main.c **** }
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /**
 220:Core/Src/main.c ****   * @brief I2C1 Initialization Function
 221:Core/Src/main.c ****   * @param None
 222:Core/Src/main.c ****   * @retval None
 223:Core/Src/main.c ****   */
 224:Core/Src/main.c **** static void MX_I2C1_Init(void)
 225:Core/Src/main.c **** {
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 0 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE END I2C1_Init 0 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 1 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE END I2C1_Init 1 */
 234:Core/Src/main.c ****   hi2c1.Instance = I2C1;
 235:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 236:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 237:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 238:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 239:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 240:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 241:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 242:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 243:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 244:Core/Src/main.c ****   {
 245:Core/Src/main.c ****     Error_Handler();
 246:Core/Src/main.c ****   }
 247:Core/Src/main.c ****   /* USER CODE BEGIN I2C1_Init 2 */
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   /* USER CODE END I2C1_Init 2 */
 250:Core/Src/main.c **** 
 251:Core/Src/main.c **** }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** /**
 254:Core/Src/main.c ****   * @brief I2S3 Initialization Function
 255:Core/Src/main.c ****   * @param None
 256:Core/Src/main.c ****   * @retval None
 257:Core/Src/main.c ****   */
 258:Core/Src/main.c **** static void MX_I2S3_Init(void)
 259:Core/Src/main.c **** {
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 6


 260:Core/Src/main.c **** 
 261:Core/Src/main.c ****   /* USER CODE BEGIN I2S3_Init 0 */
 262:Core/Src/main.c **** 
 263:Core/Src/main.c ****   /* USER CODE END I2S3_Init 0 */
 264:Core/Src/main.c **** 
 265:Core/Src/main.c ****   /* USER CODE BEGIN I2S3_Init 1 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END I2S3_Init 1 */
 268:Core/Src/main.c ****   hi2s3.Instance = SPI3;
 269:Core/Src/main.c ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 270:Core/Src/main.c ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 271:Core/Src/main.c ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 272:Core/Src/main.c ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 273:Core/Src/main.c ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 274:Core/Src/main.c ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 275:Core/Src/main.c ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 276:Core/Src/main.c ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 277:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 278:Core/Src/main.c ****   {
 279:Core/Src/main.c ****     Error_Handler();
 280:Core/Src/main.c ****   }
 281:Core/Src/main.c ****   /* USER CODE BEGIN I2S3_Init 2 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE END I2S3_Init 2 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c **** }
 286:Core/Src/main.c **** 
 287:Core/Src/main.c **** /**
 288:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 289:Core/Src/main.c ****   * @param None
 290:Core/Src/main.c ****   * @retval None
 291:Core/Src/main.c ****   */
 292:Core/Src/main.c **** static void MX_SPI1_Init(void)
 293:Core/Src/main.c **** {
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 296:Core/Src/main.c **** 
 297:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 298:Core/Src/main.c **** 
 299:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 302:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 303:Core/Src/main.c ****   hspi1.Instance = SPI1;
 304:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 305:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 306:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 307:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 308:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 309:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 310:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 311:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 312:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 313:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 314:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 315:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 316:Core/Src/main.c ****   {
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 7


 317:Core/Src/main.c ****     Error_Handler();
 318:Core/Src/main.c ****   }
 319:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 322:Core/Src/main.c **** 
 323:Core/Src/main.c **** }
 324:Core/Src/main.c **** 
 325:Core/Src/main.c **** /**
 326:Core/Src/main.c ****   * @brief GPIO Initialization Function
 327:Core/Src/main.c ****   * @param None
 328:Core/Src/main.c ****   * @retval None
 329:Core/Src/main.c ****   */
 330:Core/Src/main.c **** static void MX_GPIO_Init(void)
 331:Core/Src/main.c **** {
  28              		.loc 1 331 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 48
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 8DB0     		sub	sp, sp, #52
  45              	.LCFI1:
  46              		.cfi_def_cfa_offset 88
 332:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  47              		.loc 1 332 3 view .LVU1
  48              		.loc 1 332 20 is_stmt 0 view .LVU2
  49 0006 0024     		movs	r4, #0
  50 0008 0794     		str	r4, [sp, #28]
  51 000a 0894     		str	r4, [sp, #32]
  52 000c 0994     		str	r4, [sp, #36]
  53 000e 0A94     		str	r4, [sp, #40]
  54 0010 0B94     		str	r4, [sp, #44]
 333:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 334:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 335:Core/Src/main.c **** 
 336:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 337:Core/Src/main.c ****   __HAL_RCC_GPIOE_CLK_ENABLE();
  55              		.loc 1 337 3 is_stmt 1 view .LVU3
  56              	.LBB4:
  57              		.loc 1 337 3 view .LVU4
  58 0012 0194     		str	r4, [sp, #4]
  59              		.loc 1 337 3 view .LVU5
  60 0014 564B     		ldr	r3, .L3
  61 0016 1A6B     		ldr	r2, [r3, #48]
  62 0018 42F01002 		orr	r2, r2, #16
  63 001c 1A63     		str	r2, [r3, #48]
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 8


  64              		.loc 1 337 3 view .LVU6
  65 001e 1A6B     		ldr	r2, [r3, #48]
  66 0020 02F01002 		and	r2, r2, #16
  67 0024 0192     		str	r2, [sp, #4]
  68              		.loc 1 337 3 view .LVU7
  69 0026 019A     		ldr	r2, [sp, #4]
  70              	.LBE4:
  71              		.loc 1 337 3 view .LVU8
 338:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  72              		.loc 1 338 3 view .LVU9
  73              	.LBB5:
  74              		.loc 1 338 3 view .LVU10
  75 0028 0294     		str	r4, [sp, #8]
  76              		.loc 1 338 3 view .LVU11
  77 002a 1A6B     		ldr	r2, [r3, #48]
  78 002c 42F00402 		orr	r2, r2, #4
  79 0030 1A63     		str	r2, [r3, #48]
  80              		.loc 1 338 3 view .LVU12
  81 0032 1A6B     		ldr	r2, [r3, #48]
  82 0034 02F00402 		and	r2, r2, #4
  83 0038 0292     		str	r2, [sp, #8]
  84              		.loc 1 338 3 view .LVU13
  85 003a 029A     		ldr	r2, [sp, #8]
  86              	.LBE5:
  87              		.loc 1 338 3 view .LVU14
 339:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  88              		.loc 1 339 3 view .LVU15
  89              	.LBB6:
  90              		.loc 1 339 3 view .LVU16
  91 003c 0394     		str	r4, [sp, #12]
  92              		.loc 1 339 3 view .LVU17
  93 003e 1A6B     		ldr	r2, [r3, #48]
  94 0040 42F08002 		orr	r2, r2, #128
  95 0044 1A63     		str	r2, [r3, #48]
  96              		.loc 1 339 3 view .LVU18
  97 0046 1A6B     		ldr	r2, [r3, #48]
  98 0048 02F08002 		and	r2, r2, #128
  99 004c 0392     		str	r2, [sp, #12]
 100              		.loc 1 339 3 view .LVU19
 101 004e 039A     		ldr	r2, [sp, #12]
 102              	.LBE6:
 103              		.loc 1 339 3 view .LVU20
 340:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 104              		.loc 1 340 3 view .LVU21
 105              	.LBB7:
 106              		.loc 1 340 3 view .LVU22
 107 0050 0494     		str	r4, [sp, #16]
 108              		.loc 1 340 3 view .LVU23
 109 0052 1A6B     		ldr	r2, [r3, #48]
 110 0054 42F00102 		orr	r2, r2, #1
 111 0058 1A63     		str	r2, [r3, #48]
 112              		.loc 1 340 3 view .LVU24
 113 005a 1A6B     		ldr	r2, [r3, #48]
 114 005c 02F00102 		and	r2, r2, #1
 115 0060 0492     		str	r2, [sp, #16]
 116              		.loc 1 340 3 view .LVU25
 117 0062 049A     		ldr	r2, [sp, #16]
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 9


 118              	.LBE7:
 119              		.loc 1 340 3 view .LVU26
 341:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 120              		.loc 1 341 3 view .LVU27
 121              	.LBB8:
 122              		.loc 1 341 3 view .LVU28
 123 0064 0594     		str	r4, [sp, #20]
 124              		.loc 1 341 3 view .LVU29
 125 0066 1A6B     		ldr	r2, [r3, #48]
 126 0068 42F00202 		orr	r2, r2, #2
 127 006c 1A63     		str	r2, [r3, #48]
 128              		.loc 1 341 3 view .LVU30
 129 006e 1A6B     		ldr	r2, [r3, #48]
 130 0070 02F00202 		and	r2, r2, #2
 131 0074 0592     		str	r2, [sp, #20]
 132              		.loc 1 341 3 view .LVU31
 133 0076 059A     		ldr	r2, [sp, #20]
 134              	.LBE8:
 135              		.loc 1 341 3 view .LVU32
 342:Core/Src/main.c ****   __HAL_RCC_GPIOD_CLK_ENABLE();
 136              		.loc 1 342 3 view .LVU33
 137              	.LBB9:
 138              		.loc 1 342 3 view .LVU34
 139 0078 0694     		str	r4, [sp, #24]
 140              		.loc 1 342 3 view .LVU35
 141 007a 1A6B     		ldr	r2, [r3, #48]
 142 007c 42F00802 		orr	r2, r2, #8
 143 0080 1A63     		str	r2, [r3, #48]
 144              		.loc 1 342 3 view .LVU36
 145 0082 1B6B     		ldr	r3, [r3, #48]
 146 0084 03F00803 		and	r3, r3, #8
 147 0088 0693     		str	r3, [sp, #24]
 148              		.loc 1 342 3 view .LVU37
 149 008a 069B     		ldr	r3, [sp, #24]
 150              	.LBE9:
 151              		.loc 1 342 3 view .LVU38
 343:Core/Src/main.c **** 
 344:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 345:Core/Src/main.c ****   HAL_GPIO_WritePin(CS_I2C_SPI_GPIO_Port, CS_I2C_SPI_Pin, GPIO_PIN_RESET);
 152              		.loc 1 345 3 view .LVU39
 153 008c 394E     		ldr	r6, .L3+4
 154 008e 2246     		mov	r2, r4
 155 0090 0821     		movs	r1, #8
 156 0092 3046     		mov	r0, r6
 157 0094 FFF7FEFF 		bl	HAL_GPIO_WritePin
 158              	.LVL0:
 346:Core/Src/main.c **** 
 347:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 348:Core/Src/main.c ****   HAL_GPIO_WritePin(OTG_FS_PowerSwitchOn_GPIO_Port, OTG_FS_PowerSwitchOn_Pin, GPIO_PIN_SET);
 159              		.loc 1 348 3 view .LVU40
 160 0098 DFF8E090 		ldr	r9, .L3+12
 161 009c 0122     		movs	r2, #1
 162 009e 1146     		mov	r1, r2
 163 00a0 4846     		mov	r0, r9
 164 00a2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 165              	.LVL1:
 349:Core/Src/main.c **** 
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 10


 350:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 351:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOD, LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin
 166              		.loc 1 351 3 view .LVU41
 167 00a6 DFF8D880 		ldr	r8, .L3+16
 168 00aa 2246     		mov	r2, r4
 169 00ac 4FF21001 		movw	r1, #61456
 170 00b0 4046     		mov	r0, r8
 171 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 172              	.LVL2:
 352:Core/Src/main.c ****                           |Audio_RST_Pin, GPIO_PIN_RESET);
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /*Configure GPIO pin : CS_I2C_SPI_Pin */
 355:Core/Src/main.c ****   GPIO_InitStruct.Pin = CS_I2C_SPI_Pin;
 173              		.loc 1 355 3 view .LVU42
 174              		.loc 1 355 23 is_stmt 0 view .LVU43
 175 00b6 0827     		movs	r7, #8
 176 00b8 0797     		str	r7, [sp, #28]
 356:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 177              		.loc 1 356 3 is_stmt 1 view .LVU44
 178              		.loc 1 356 24 is_stmt 0 view .LVU45
 179 00ba 0125     		movs	r5, #1
 180 00bc 0895     		str	r5, [sp, #32]
 357:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 181              		.loc 1 357 3 is_stmt 1 view .LVU46
 182              		.loc 1 357 24 is_stmt 0 view .LVU47
 183 00be 0994     		str	r4, [sp, #36]
 358:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 184              		.loc 1 358 3 is_stmt 1 view .LVU48
 185              		.loc 1 358 25 is_stmt 0 view .LVU49
 186 00c0 0A94     		str	r4, [sp, #40]
 359:Core/Src/main.c ****   HAL_GPIO_Init(CS_I2C_SPI_GPIO_Port, &GPIO_InitStruct);
 187              		.loc 1 359 3 is_stmt 1 view .LVU50
 188 00c2 07A9     		add	r1, sp, #28
 189 00c4 3046     		mov	r0, r6
 190 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 191              	.LVL3:
 360:Core/Src/main.c **** 
 361:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_PowerSwitchOn_Pin */
 362:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_PowerSwitchOn_Pin;
 192              		.loc 1 362 3 view .LVU51
 193              		.loc 1 362 23 is_stmt 0 view .LVU52
 194 00ca 0795     		str	r5, [sp, #28]
 363:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 195              		.loc 1 363 3 is_stmt 1 view .LVU53
 196              		.loc 1 363 24 is_stmt 0 view .LVU54
 197 00cc 0895     		str	r5, [sp, #32]
 364:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 198              		.loc 1 364 3 is_stmt 1 view .LVU55
 199              		.loc 1 364 24 is_stmt 0 view .LVU56
 200 00ce 0994     		str	r4, [sp, #36]
 365:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 201              		.loc 1 365 3 is_stmt 1 view .LVU57
 202              		.loc 1 365 25 is_stmt 0 view .LVU58
 203 00d0 0A94     		str	r4, [sp, #40]
 366:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_PowerSwitchOn_GPIO_Port, &GPIO_InitStruct);
 204              		.loc 1 366 3 is_stmt 1 view .LVU59
 205 00d2 07A9     		add	r1, sp, #28
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 11


 206 00d4 4846     		mov	r0, r9
 207 00d6 FFF7FEFF 		bl	HAL_GPIO_Init
 208              	.LVL4:
 367:Core/Src/main.c **** 
 368:Core/Src/main.c ****   /*Configure GPIO pin : PDM_OUT_Pin */
 369:Core/Src/main.c ****   GPIO_InitStruct.Pin = PDM_OUT_Pin;
 209              		.loc 1 369 3 view .LVU60
 210              		.loc 1 369 23 is_stmt 0 view .LVU61
 211 00da 0797     		str	r7, [sp, #28]
 370:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 212              		.loc 1 370 3 is_stmt 1 view .LVU62
 213              		.loc 1 370 24 is_stmt 0 view .LVU63
 214 00dc 0227     		movs	r7, #2
 215 00de 0897     		str	r7, [sp, #32]
 371:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 216              		.loc 1 371 3 is_stmt 1 view .LVU64
 217              		.loc 1 371 24 is_stmt 0 view .LVU65
 218 00e0 0994     		str	r4, [sp, #36]
 372:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 219              		.loc 1 372 3 is_stmt 1 view .LVU66
 220              		.loc 1 372 25 is_stmt 0 view .LVU67
 221 00e2 0A94     		str	r4, [sp, #40]
 373:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 222              		.loc 1 373 3 is_stmt 1 view .LVU68
 223              		.loc 1 373 29 is_stmt 0 view .LVU69
 224 00e4 4FF0050A 		mov	r10, #5
 225 00e8 CDF82CA0 		str	r10, [sp, #44]
 374:Core/Src/main.c ****   HAL_GPIO_Init(PDM_OUT_GPIO_Port, &GPIO_InitStruct);
 226              		.loc 1 374 3 is_stmt 1 view .LVU70
 227 00ec 07A9     		add	r1, sp, #28
 228 00ee 4846     		mov	r0, r9
 229 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 230              	.LVL5:
 375:Core/Src/main.c **** 
 376:Core/Src/main.c ****   /*Configure GPIO pin : B1_Pin */
 377:Core/Src/main.c ****   GPIO_InitStruct.Pin = B1_Pin;
 231              		.loc 1 377 3 view .LVU71
 232              		.loc 1 377 23 is_stmt 0 view .LVU72
 233 00f4 0795     		str	r5, [sp, #28]
 378:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 234              		.loc 1 378 3 is_stmt 1 view .LVU73
 235              		.loc 1 378 24 is_stmt 0 view .LVU74
 236 00f6 4FF49019 		mov	r9, #1179648
 237 00fa CDF82090 		str	r9, [sp, #32]
 379:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 238              		.loc 1 379 3 is_stmt 1 view .LVU75
 239              		.loc 1 379 24 is_stmt 0 view .LVU76
 240 00fe 0994     		str	r4, [sp, #36]
 380:Core/Src/main.c ****   HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 241              		.loc 1 380 3 is_stmt 1 view .LVU77
 242 0100 07A9     		add	r1, sp, #28
 243 0102 1D48     		ldr	r0, .L3+8
 244 0104 FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL6:
 381:Core/Src/main.c **** 
 382:Core/Src/main.c ****   /*Configure GPIO pin : BOOT1_Pin */
 383:Core/Src/main.c ****   GPIO_InitStruct.Pin = BOOT1_Pin;
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 12


 246              		.loc 1 383 3 view .LVU78
 247              		.loc 1 383 23 is_stmt 0 view .LVU79
 248 0108 0423     		movs	r3, #4
 249 010a 0793     		str	r3, [sp, #28]
 384:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 250              		.loc 1 384 3 is_stmt 1 view .LVU80
 251              		.loc 1 384 24 is_stmt 0 view .LVU81
 252 010c 0894     		str	r4, [sp, #32]
 385:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 253              		.loc 1 385 3 is_stmt 1 view .LVU82
 254              		.loc 1 385 24 is_stmt 0 view .LVU83
 255 010e 0994     		str	r4, [sp, #36]
 386:Core/Src/main.c ****   HAL_GPIO_Init(BOOT1_GPIO_Port, &GPIO_InitStruct);
 256              		.loc 1 386 3 is_stmt 1 view .LVU84
 257 0110 DFF870B0 		ldr	fp, .L3+20
 258 0114 07A9     		add	r1, sp, #28
 259 0116 5846     		mov	r0, fp
 260 0118 FFF7FEFF 		bl	HAL_GPIO_Init
 261              	.LVL7:
 387:Core/Src/main.c **** 
 388:Core/Src/main.c ****   /*Configure GPIO pin : CLK_IN_Pin */
 389:Core/Src/main.c ****   GPIO_InitStruct.Pin = CLK_IN_Pin;
 262              		.loc 1 389 3 view .LVU85
 263              		.loc 1 389 23 is_stmt 0 view .LVU86
 264 011c 4FF48063 		mov	r3, #1024
 265 0120 0793     		str	r3, [sp, #28]
 390:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 266              		.loc 1 390 3 is_stmt 1 view .LVU87
 267              		.loc 1 390 24 is_stmt 0 view .LVU88
 268 0122 0897     		str	r7, [sp, #32]
 391:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 269              		.loc 1 391 3 is_stmt 1 view .LVU89
 270              		.loc 1 391 24 is_stmt 0 view .LVU90
 271 0124 0994     		str	r4, [sp, #36]
 392:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 272              		.loc 1 392 3 is_stmt 1 view .LVU91
 273              		.loc 1 392 25 is_stmt 0 view .LVU92
 274 0126 0A94     		str	r4, [sp, #40]
 393:Core/Src/main.c ****   GPIO_InitStruct.Alternate = GPIO_AF5_SPI2;
 275              		.loc 1 393 3 is_stmt 1 view .LVU93
 276              		.loc 1 393 29 is_stmt 0 view .LVU94
 277 0128 CDF82CA0 		str	r10, [sp, #44]
 394:Core/Src/main.c ****   HAL_GPIO_Init(CLK_IN_GPIO_Port, &GPIO_InitStruct);
 278              		.loc 1 394 3 is_stmt 1 view .LVU95
 279 012c 07A9     		add	r1, sp, #28
 280 012e 5846     		mov	r0, fp
 281 0130 FFF7FEFF 		bl	HAL_GPIO_Init
 282              	.LVL8:
 395:Core/Src/main.c **** 
 396:Core/Src/main.c ****   /*Configure GPIO pins : LD4_Pin LD3_Pin LD5_Pin LD6_Pin
 397:Core/Src/main.c ****                            Audio_RST_Pin */
 398:Core/Src/main.c ****   GPIO_InitStruct.Pin = LD4_Pin|LD3_Pin|LD5_Pin|LD6_Pin
 283              		.loc 1 398 3 view .LVU96
 284              		.loc 1 398 23 is_stmt 0 view .LVU97
 285 0134 4FF21003 		movw	r3, #61456
 286 0138 0793     		str	r3, [sp, #28]
 399:Core/Src/main.c ****                           |Audio_RST_Pin;
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 13


 400:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 287              		.loc 1 400 3 is_stmt 1 view .LVU98
 288              		.loc 1 400 24 is_stmt 0 view .LVU99
 289 013a 0895     		str	r5, [sp, #32]
 401:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 290              		.loc 1 401 3 is_stmt 1 view .LVU100
 291              		.loc 1 401 24 is_stmt 0 view .LVU101
 292 013c 0994     		str	r4, [sp, #36]
 402:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 293              		.loc 1 402 3 is_stmt 1 view .LVU102
 294              		.loc 1 402 25 is_stmt 0 view .LVU103
 295 013e 0A94     		str	r4, [sp, #40]
 403:Core/Src/main.c ****   HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 296              		.loc 1 403 3 is_stmt 1 view .LVU104
 297 0140 07A9     		add	r1, sp, #28
 298 0142 4046     		mov	r0, r8
 299 0144 FFF7FEFF 		bl	HAL_GPIO_Init
 300              	.LVL9:
 404:Core/Src/main.c **** 
 405:Core/Src/main.c ****   /*Configure GPIO pin : OTG_FS_OverCurrent_Pin */
 406:Core/Src/main.c ****   GPIO_InitStruct.Pin = OTG_FS_OverCurrent_Pin;
 301              		.loc 1 406 3 view .LVU105
 302              		.loc 1 406 23 is_stmt 0 view .LVU106
 303 0148 2023     		movs	r3, #32
 304 014a 0793     		str	r3, [sp, #28]
 407:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 305              		.loc 1 407 3 is_stmt 1 view .LVU107
 306              		.loc 1 407 24 is_stmt 0 view .LVU108
 307 014c 0894     		str	r4, [sp, #32]
 408:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 308              		.loc 1 408 3 is_stmt 1 view .LVU109
 309              		.loc 1 408 24 is_stmt 0 view .LVU110
 310 014e 0994     		str	r4, [sp, #36]
 409:Core/Src/main.c ****   HAL_GPIO_Init(OTG_FS_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 311              		.loc 1 409 3 is_stmt 1 view .LVU111
 312 0150 07A9     		add	r1, sp, #28
 313 0152 4046     		mov	r0, r8
 314 0154 FFF7FEFF 		bl	HAL_GPIO_Init
 315              	.LVL10:
 410:Core/Src/main.c **** 
 411:Core/Src/main.c ****   /*Configure GPIO pin : MEMS_INT2_Pin */
 412:Core/Src/main.c ****   GPIO_InitStruct.Pin = MEMS_INT2_Pin;
 316              		.loc 1 412 3 view .LVU112
 317              		.loc 1 412 23 is_stmt 0 view .LVU113
 318 0158 0797     		str	r7, [sp, #28]
 413:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_EVT_RISING;
 319              		.loc 1 413 3 is_stmt 1 view .LVU114
 320              		.loc 1 413 24 is_stmt 0 view .LVU115
 321 015a CDF82090 		str	r9, [sp, #32]
 414:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 322              		.loc 1 414 3 is_stmt 1 view .LVU116
 323              		.loc 1 414 24 is_stmt 0 view .LVU117
 324 015e 0994     		str	r4, [sp, #36]
 415:Core/Src/main.c ****   HAL_GPIO_Init(MEMS_INT2_GPIO_Port, &GPIO_InitStruct);
 325              		.loc 1 415 3 is_stmt 1 view .LVU118
 326 0160 07A9     		add	r1, sp, #28
 327 0162 3046     		mov	r0, r6
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 14


 328 0164 FFF7FEFF 		bl	HAL_GPIO_Init
 329              	.LVL11:
 416:Core/Src/main.c **** 
 417:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 418:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 419:Core/Src/main.c **** }
 330              		.loc 1 419 1 is_stmt 0 view .LVU119
 331 0168 0DB0     		add	sp, sp, #52
 332              	.LCFI2:
 333              		.cfi_def_cfa_offset 36
 334              		@ sp needed
 335 016a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 336              	.L4:
 337 016e 00BF     		.align	2
 338              	.L3:
 339 0170 00380240 		.word	1073887232
 340 0174 00100240 		.word	1073876992
 341 0178 00000240 		.word	1073872896
 342 017c 00080240 		.word	1073874944
 343 0180 000C0240 		.word	1073875968
 344 0184 00040240 		.word	1073873920
 345              		.cfi_endproc
 346              	.LFE143:
 348              		.section	.text.StartBlink01,"ax",%progbits
 349              		.align	1
 350              		.global	StartBlink01
 351              		.syntax unified
 352              		.thumb
 353              		.thumb_func
 355              	StartBlink01:
 356              	.LVL12:
 357              	.LFB144:
 420:Core/Src/main.c **** 
 421:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 422:Core/Src/main.c **** 
 423:Core/Src/main.c **** /* USER CODE END 4 */
 424:Core/Src/main.c **** 
 425:Core/Src/main.c **** /* USER CODE BEGIN Header_StartBlink01 */
 426:Core/Src/main.c **** /**
 427:Core/Src/main.c ****   * @brief  Function implementing the blink01 thread.
 428:Core/Src/main.c ****   * @param  argument: Not used
 429:Core/Src/main.c ****   * @retval None
 430:Core/Src/main.c ****   */
 431:Core/Src/main.c **** /* USER CODE END Header_StartBlink01 */
 432:Core/Src/main.c **** void StartBlink01(void *argument)
 433:Core/Src/main.c **** {
 358              		.loc 1 433 1 is_stmt 1 view -0
 359              		.cfi_startproc
 360              		@ Volatile: function does not return.
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		.loc 1 433 1 is_stmt 0 view .LVU121
 364 0000 08B5     		push	{r3, lr}
 365              	.LCFI3:
 366              		.cfi_def_cfa_offset 8
 367              		.cfi_offset 3, -8
 368              		.cfi_offset 14, -4
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 15


 434:Core/Src/main.c ****   /* init code for USB_HOST */
 435:Core/Src/main.c ****   MX_USB_HOST_Init();
 369              		.loc 1 435 3 is_stmt 1 view .LVU122
 370 0002 FFF7FEFF 		bl	MX_USB_HOST_Init
 371              	.LVL13:
 372              	.L6:
 436:Core/Src/main.c ****   /* USER CODE BEGIN 5 */
 437:Core/Src/main.c ****   /* Infinite loop */
 438:Core/Src/main.c ****   for(;;)
 373              		.loc 1 438 3 discriminator 1 view .LVU123
 439:Core/Src/main.c ****   {
 440:Core/Src/main.c ****     HAL_GPIO_TogglePin(GPIOD, GPIO_PIN_15);
 374              		.loc 1 440 5 discriminator 1 view .LVU124
 375 0006 4FF40041 		mov	r1, #32768
 376 000a 0448     		ldr	r0, .L8
 377 000c FFF7FEFF 		bl	HAL_GPIO_TogglePin
 378              	.LVL14:
 441:Core/Src/main.c ****     osDelay(500);
 379              		.loc 1 441 5 discriminator 1 view .LVU125
 380 0010 4FF4FA70 		mov	r0, #500
 381 0014 FFF7FEFF 		bl	osDelay
 382              	.LVL15:
 438:Core/Src/main.c ****   {
 383              		.loc 1 438 8 discriminator 1 view .LVU126
 384 0018 F5E7     		b	.L6
 385              	.L9:
 386 001a 00BF     		.align	2
 387              	.L8:
 388 001c 000C0240 		.word	1073875968
 389              		.cfi_endproc
 390              	.LFE144:
 392              		.section	.text.StartBlink02,"ax",%progbits
 393              		.align	1
 394              		.global	StartBlink02
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 399              	StartBlink02:
 400              	.LFB145:
 442:Core/Src/main.c ****   }
 443:Core/Src/main.c ****   /* USER CODE END 5 */
 444:Core/Src/main.c **** }
 445:Core/Src/main.c **** 
 446:Core/Src/main.c **** /* USER CODE BEGIN Header_StartBlink02 */
 447:Core/Src/main.c **** /**
 448:Core/Src/main.c **** * @brief Function implementing the blink02 thread.
 449:Core/Src/main.c **** * @param argument: Not used
 450:Core/Src/main.c **** * @retval None
 451:Core/Src/main.c **** */
 452:Core/Src/main.c **** /* USER CODE END Header_StartBlink02 */
 453:Core/Src/main.c **** void StartBlink02(void *argument)
 454:Core/Src/main.c **** {
 401              		.loc 1 454 1 view -0
 402              		.cfi_startproc
 403              		@ Volatile: function does not return.
 404              		@ args = 0, pretend = 0, frame = 0
 405              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 16


 406              	.LVL16:
 407              		.loc 1 454 1 is_stmt 0 view .LVU128
 408 0000 08B5     		push	{r3, lr}
 409              	.LCFI4:
 410              		.cfi_def_cfa_offset 8
 411              		.cfi_offset 3, -8
 412              		.cfi_offset 14, -4
 413              	.LVL17:
 414              	.L11:
 455:Core/Src/main.c ****   /* USER CODE BEGIN StartBlink02 */
 456:Core/Src/main.c ****   /* Infinite loop */
 457:Core/Src/main.c ****   for(;;)
 415              		.loc 1 457 3 is_stmt 1 discriminator 1 view .LVU129
 458:Core/Src/main.c ****   {
 459:Core/Src/main.c ****     osDelay(1);
 416              		.loc 1 459 5 discriminator 1 view .LVU130
 417 0002 0120     		movs	r0, #1
 418 0004 FFF7FEFF 		bl	osDelay
 419              	.LVL18:
 457:Core/Src/main.c ****   {
 420              		.loc 1 457 8 discriminator 1 view .LVU131
 421 0008 FBE7     		b	.L11
 422              		.cfi_endproc
 423              	.LFE145:
 425              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 426              		.align	1
 427              		.global	HAL_TIM_PeriodElapsedCallback
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 432              	HAL_TIM_PeriodElapsedCallback:
 433              	.LVL19:
 434              	.LFB146:
 460:Core/Src/main.c ****   }
 461:Core/Src/main.c ****   /* USER CODE END StartBlink02 */
 462:Core/Src/main.c **** }
 463:Core/Src/main.c **** 
 464:Core/Src/main.c **** /**
 465:Core/Src/main.c ****   * @brief  Period elapsed callback in non blocking mode
 466:Core/Src/main.c ****   * @note   This function is called  when TIM6 interrupt took place, inside
 467:Core/Src/main.c ****   * HAL_TIM_IRQHandler(). It makes a direct call to HAL_IncTick() to increment
 468:Core/Src/main.c ****   * a global variable "uwTick" used as application time base.
 469:Core/Src/main.c ****   * @param  htim : TIM handle
 470:Core/Src/main.c ****   * @retval None
 471:Core/Src/main.c ****   */
 472:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
 473:Core/Src/main.c **** {
 435              		.loc 1 473 1 view -0
 436              		.cfi_startproc
 437              		@ args = 0, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 439              		.loc 1 473 1 is_stmt 0 view .LVU133
 440 0000 08B5     		push	{r3, lr}
 441              	.LCFI5:
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 3, -8
 444              		.cfi_offset 14, -4
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 17


 474:Core/Src/main.c ****   /* USER CODE BEGIN Callback 0 */
 475:Core/Src/main.c **** 
 476:Core/Src/main.c ****   /* USER CODE END Callback 0 */
 477:Core/Src/main.c ****   if (htim->Instance == TIM6) {
 445              		.loc 1 477 3 is_stmt 1 view .LVU134
 446              		.loc 1 477 11 is_stmt 0 view .LVU135
 447 0002 0268     		ldr	r2, [r0]
 448              		.loc 1 477 6 view .LVU136
 449 0004 034B     		ldr	r3, .L17
 450 0006 9A42     		cmp	r2, r3
 451 0008 00D0     		beq	.L16
 452              	.LVL20:
 453              	.L13:
 478:Core/Src/main.c ****     HAL_IncTick();
 479:Core/Src/main.c ****   }
 480:Core/Src/main.c ****   /* USER CODE BEGIN Callback 1 */
 481:Core/Src/main.c **** 
 482:Core/Src/main.c ****   /* USER CODE END Callback 1 */
 483:Core/Src/main.c **** }
 454              		.loc 1 483 1 view .LVU137
 455 000a 08BD     		pop	{r3, pc}
 456              	.LVL21:
 457              	.L16:
 478:Core/Src/main.c ****     HAL_IncTick();
 458              		.loc 1 478 5 is_stmt 1 view .LVU138
 459 000c FFF7FEFF 		bl	HAL_IncTick
 460              	.LVL22:
 461              		.loc 1 483 1 is_stmt 0 view .LVU139
 462 0010 FBE7     		b	.L13
 463              	.L18:
 464 0012 00BF     		.align	2
 465              	.L17:
 466 0014 00100040 		.word	1073745920
 467              		.cfi_endproc
 468              	.LFE146:
 470              		.section	.text.Error_Handler,"ax",%progbits
 471              		.align	1
 472              		.global	Error_Handler
 473              		.syntax unified
 474              		.thumb
 475              		.thumb_func
 477              	Error_Handler:
 478              	.LFB147:
 484:Core/Src/main.c **** 
 485:Core/Src/main.c **** /**
 486:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 487:Core/Src/main.c ****   * @retval None
 488:Core/Src/main.c ****   */
 489:Core/Src/main.c **** void Error_Handler(void)
 490:Core/Src/main.c **** {
 479              		.loc 1 490 1 is_stmt 1 view -0
 480              		.cfi_startproc
 481              		@ Volatile: function does not return.
 482              		@ args = 0, pretend = 0, frame = 0
 483              		@ frame_needed = 0, uses_anonymous_args = 0
 484              		@ link register save eliminated.
 491:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 18


 492:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 493:Core/Src/main.c ****   __disable_irq();
 485              		.loc 1 493 3 view .LVU141
 486              	.LBB10:
 487              	.LBI10:
 488              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.4.1
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     27. May 2021
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2021 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 19


  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 20


 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 21


 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute__((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__ARM_FEATURE_CMSE) && (__ARM_FEATURE_CMSE == 3U)
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_SEAL
 187:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_SEAL              __StackSeal
 188:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 189:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_SIZE
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_SIZE      8U
 192:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 193:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __TZ_STACK_SEAL_VALUE
 195:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __TZ_STACK_SEAL_VALUE     0xFEF5EDA5FEF5EDA5ULL
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 198:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __TZ_set_STACKSEAL_S (uint32_t* stackTop) {
 200:Drivers/CMSIS/Include/cmsis_gcc.h ****   *((uint64_t *)stackTop) = __TZ_STACK_SEAL_VALUE;
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 203:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 204:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 205:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 206:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 207:Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 208:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 209:Drivers/CMSIS/Include/cmsis_gcc.h **** */
 210:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 211:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 212:Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 213:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 214:Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 215:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 216:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+l" (r)
 217:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 218:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 219:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 220:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_RW_REG(r) "+r" (r)
 221:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 222:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 22


 223:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 224:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 225:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 226:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 227:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 228:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __NOP()                             __ASM volatile ("nop")
 229:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 230:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 231:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 232:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 233:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 234:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFI()                             __ASM volatile ("wfi":::"memory")
 235:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 236:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 237:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 238:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 239:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 240:Drivers/CMSIS/Include/cmsis_gcc.h ****            a low-power state until one of a number of events occurs.
 241:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 242:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __WFE()                             __ASM volatile ("wfe":::"memory")
 243:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 244:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 245:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 246:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 247:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 248:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 249:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SEV()                             __ASM volatile ("sev")
 250:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 251:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 253:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 254:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 255:Drivers/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 256:Drivers/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 257:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 258:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __ISB(void)
 259:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 260:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 261:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 262:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 263:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 264:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 265:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 266:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 267:Drivers/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 268:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 269:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DSB(void)
 270:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 271:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 272:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 273:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 274:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 275:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 276:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 277:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 278:Drivers/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 279:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 23


 280:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __DMB(void)
 281:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 282:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 283:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 284:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 285:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 286:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 287:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 288:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in unsigned integer value. For example, 0x12345678 becomes 0x785
 289:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 290:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 291:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 292:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV(uint32_t value)
 293:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 294:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 295:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 296:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 297:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 298:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 299:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 300:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 301:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 302:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 305:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 306:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 307:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order within each halfword of a word. For example, 0x12345678 becomes 
 308:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 309:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 310:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 311:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __REV16(uint32_t value)
 312:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 313:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 314:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 315:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 316:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 317:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 318:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 320:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 321:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 322:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a 16-bit value and returns the signed 16-bit result. For exam
 323:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 324:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 325:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 326:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int16_t __REVSH(int16_t value)
 327:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 328:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 329:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (int16_t)__builtin_bswap16(value);
 330:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 331:Drivers/CMSIS/Include/cmsis_gcc.h ****   int16_t result;
 332:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 333:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 334:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
 335:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 336:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 24


 337:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 338:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 339:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 340:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 341:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 342:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op1  Value to rotate
 343:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    op2  Number of Bits to rotate
 344:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 345:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 346:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 347:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 348:Drivers/CMSIS/Include/cmsis_gcc.h ****   op2 %= 32U;
 349:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (op2 == 0U)
 350:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 351:Drivers/CMSIS/Include/cmsis_gcc.h ****     return op1;
 352:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 353:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 354:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 355:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 356:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 357:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 358:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 359:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 360:Drivers/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 361:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 362:Drivers/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 363:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 364:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 365:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 366:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 367:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 368:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 369:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 370:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 371:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 372:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RBIT(uint32_t value)
 374:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 376:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 377:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 378:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 379:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 380:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM ("rbit %0, %1" : "=r" (result) : "r" (value) );
 381:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 382:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t s = (4U /*sizeof(v)*/ * 8U) - 1U; /* extra shift needed at end */
 383:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 384:Drivers/CMSIS/Include/cmsis_gcc.h ****   result = value;                      /* r will be reversed bits of v; first get LSB of v */
 385:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (value >>= 1U; value != 0U; value >>= 1U)
 386:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 387:Drivers/CMSIS/Include/cmsis_gcc.h ****     result <<= 1U;
 388:Drivers/CMSIS/Include/cmsis_gcc.h ****     result |= value & 1U;
 389:Drivers/CMSIS/Include/cmsis_gcc.h ****     s--;
 390:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 391:Drivers/CMSIS/Include/cmsis_gcc.h ****   result <<= s;                        /* shift when v's highest bits are zero */
 392:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 393:Drivers/CMSIS/Include/cmsis_gcc.h ****   return result;
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 25


 394:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 395:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 396:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 397:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 398:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Count leading zeros
 399:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Counts the number of leading zeros of a data value.
 400:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to count the leading zeros
 401:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             number of leading zeros in value
 402:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 403:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __CLZ(uint32_t value)
 404:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 405:Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Even though __builtin_clz produces a CLZ instruction on ARM, formally
 406:Drivers/CMSIS/Include/cmsis_gcc.h ****      __builtin_clz(0) is undefined behaviour, so handle this case specially.
 407:Drivers/CMSIS/Include/cmsis_gcc.h ****      This guarantees ARM-compatible results if happening to compile on a non-ARM
 408:Drivers/CMSIS/Include/cmsis_gcc.h ****      target, and ensures the compiler doesn't decide to activate any
 409:Drivers/CMSIS/Include/cmsis_gcc.h ****      optimisations using the logic "value was passed to __builtin_clz, so it
 410:Drivers/CMSIS/Include/cmsis_gcc.h ****      is non-zero".
 411:Drivers/CMSIS/Include/cmsis_gcc.h ****      ARM GCC 7.3 and possibly earlier will optimise this test away, leaving a
 412:Drivers/CMSIS/Include/cmsis_gcc.h ****      single CLZ instruction.
 413:Drivers/CMSIS/Include/cmsis_gcc.h ****    */
 414:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (value == 0U)
 415:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 416:Drivers/CMSIS/Include/cmsis_gcc.h ****     return 32U;
 417:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 418:Drivers/CMSIS/Include/cmsis_gcc.h ****   return __builtin_clz(value);
 419:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 420:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 421:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 422:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 423:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 424:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 425:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 426:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 427:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (8 bit)
 428:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 8 bit value.
 429:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 430:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 431:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 432:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDREXB(volatile uint8_t *addr)
 433:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 434:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 435:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 436:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 437:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, %1" : "=r" (result) : "Q" (*addr) );
 438:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 439:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 440:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 441:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 442:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 443:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 444:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 445:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 446:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 447:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 448:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 449:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (16 bit)
 450:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 16 bit values.
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 26


 451:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 452:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 453:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 454:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDREXH(volatile uint16_t *addr)
 455:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 456:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 457:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 458:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 459:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, %1" : "=r" (result) : "Q" (*addr) );
 460:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 461:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 462:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 463:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 464:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) : "memory" );
 465:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 466:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 467:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 468:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 469:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 470:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 471:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDR Exclusive (32 bit)
 472:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive LDR instruction for 32 bit values.
 473:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 474:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 475:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 476:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDREXW(volatile uint32_t *addr)
 477:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 478:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 479:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 480:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrex %0, %1" : "=r" (result) : "Q" (*addr) );
 481:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 482:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 483:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 484:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 485:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 486:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (8 bit)
 487:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 8 bit values.
 488:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 489:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 490:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 491:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 492:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 493:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXB(uint8_t value, volatile uint8_t *addr)
 494:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 495:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 496:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 497:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexb %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 498:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 499:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 500:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 501:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 502:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 503:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (16 bit)
 504:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 16 bit values.
 505:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 506:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 507:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 27


 508:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 509:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 510:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXH(uint16_t value, volatile uint16_t *addr)
 511:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 512:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 513:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 514:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strexh %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" ((uint32_t)value) );
 515:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 516:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 517:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 518:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 519:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 520:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STR Exclusive (32 bit)
 521:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a exclusive STR instruction for 32 bit values.
 522:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 523:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 524:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 525:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 526:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 527:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STREXW(uint32_t value, volatile uint32_t *addr)
 528:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 529:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 530:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 531:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strex %0, %2, %1" : "=&r" (result), "=Q" (*addr) : "r" (value) );
 532:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 533:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 534:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 535:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 536:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 537:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Remove the exclusive lock
 538:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Removes the exclusive lock which is created by LDREX.
 539:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 540:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __CLREX(void)
 541:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 542:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("clrex" ::: "memory");
 543:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 544:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 545:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 546:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 547:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 548:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 549:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 550:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 551:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 552:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 553:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    )
 554:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 555:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 556:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 557:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 558:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (1..32)
 559:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 560:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 561:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __SSAT(ARG1, ARG2) \
 562:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 563:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 564:Drivers/CMSIS/Include/cmsis_gcc.h ****   int32_t __RES, __ARG1 = (ARG1); \
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 28


 565:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("ssat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 566:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 567:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 568:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 569:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 570:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 571:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 572:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 573:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG1  Value to be saturated
 574:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  ARG2  Bit position to saturate to (0..31)
 575:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 576:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 577:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __USAT(ARG1, ARG2) \
 578:Drivers/CMSIS/Include/cmsis_gcc.h **** __extension__ \
 579:Drivers/CMSIS/Include/cmsis_gcc.h **** ({                          \
 580:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t __RES, __ARG1 = (ARG1); \
 581:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("usat %0, %1, %2" : "=r" (__RES) :  "I" (ARG2), "r" (__ARG1) : "cc" ); \
 582:Drivers/CMSIS/Include/cmsis_gcc.h ****   __RES; \
 583:Drivers/CMSIS/Include/cmsis_gcc.h ****  })
 584:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 585:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 586:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 587:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right with Extend (32 bit)
 588:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Moves each bit of a bitstring right by one bit.
 589:Drivers/CMSIS/Include/cmsis_gcc.h ****            The carry input is shifted in at the left end of the bitstring.
 590:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 591:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 592:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 593:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __RRX(uint32_t value)
 594:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 595:Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 596:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 597:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rrx %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 598:Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 599:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 600:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 601:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 602:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 603:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (8 bit)
 604:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 8 bit value.
 605:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 606:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 607:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 608:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDRBT(volatile uint8_t *ptr)
 609:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 610:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 611:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 612:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 613:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, %1" : "=r" (result) : "Q" (*ptr) );
 614:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 615:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 616:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 617:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 618:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrbt %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 619:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 620:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);    /* Add explicit type cast here */
 621:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 29


 622:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 623:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 624:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 625:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (16 bit)
 626:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 16 bit values.
 627:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 628:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 629:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 630:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDRHT(volatile uint16_t *ptr)
 631:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 632:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 633:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 634:Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 635:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, %1" : "=r" (result) : "Q" (*ptr) );
 636:Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 637:Drivers/CMSIS/Include/cmsis_gcc.h ****     /* Prior to GCC 4.8, "Q" will be expanded to [rx, #0] which is not
 638:Drivers/CMSIS/Include/cmsis_gcc.h ****        accepted by assembler. So has to use following less efficient pattern.
 639:Drivers/CMSIS/Include/cmsis_gcc.h ****     */
 640:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrht %0, [%1]" : "=r" (result) : "r" (ptr) : "memory" );
 641:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 642:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);    /* Add explicit type cast here */
 643:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 644:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 645:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 646:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 647:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   LDRT Unprivileged (32 bit)
 648:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged LDRT instruction for 32 bit values.
 649:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 650:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 651:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 652:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDRT(volatile uint32_t *ptr)
 653:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 654:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 655:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 656:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldrt %0, %1" : "=r" (result) : "Q" (*ptr) );
 657:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 658:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 659:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 660:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 661:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 662:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (8 bit)
 663:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 8 bit values.
 664:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 665:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 666:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 667:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRBT(uint8_t value, volatile uint8_t *ptr)
 668:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 669:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strbt %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 670:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 671:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 672:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 673:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 674:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (16 bit)
 675:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 16 bit values.
 676:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 677:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 678:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 30


 679:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRHT(uint16_t value, volatile uint16_t *ptr)
 680:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 681:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strht %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) );
 682:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 683:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 684:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 685:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 686:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   STRT Unprivileged (32 bit)
 687:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a Unprivileged STRT instruction for 32 bit values.
 688:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 689:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 690:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 691:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STRT(uint32_t value, volatile uint32_t *ptr)
 692:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 693:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("strt %1, %0" : "=Q" (*ptr) : "r" (value) );
 694:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 695:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 696:Drivers/CMSIS/Include/cmsis_gcc.h **** #else  /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 697:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 698:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 699:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 700:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 701:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Signed Saturate
 702:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates a signed value.
 703:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 704:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (1..32)
 705:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 706:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 707:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE int32_t __SSAT(int32_t val, uint32_t sat)
 708:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 709:Drivers/CMSIS/Include/cmsis_gcc.h ****   if ((sat >= 1U) && (sat <= 32U))
 710:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
 711:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t max = (int32_t)((1U << (sat - 1U)) - 1U);
 712:Drivers/CMSIS/Include/cmsis_gcc.h ****     const int32_t min = -1 - max ;
 713:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > max)
 714:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 715:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 716:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 717:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < min)
 718:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 719:Drivers/CMSIS/Include/cmsis_gcc.h ****       return min;
 720:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 721:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 722:Drivers/CMSIS/Include/cmsis_gcc.h ****   return val;
 723:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 724:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 725:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 726:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Unsigned Saturate
 727:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Saturates an unsigned value.
 728:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to be saturated
 729:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    sat  Bit position to saturate to (0..31)
 730:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             Saturated value
 731:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 732:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __USAT(int32_t val, uint32_t sat)
 733:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 734:Drivers/CMSIS/Include/cmsis_gcc.h ****   if (sat <= 31U)
 735:Drivers/CMSIS/Include/cmsis_gcc.h ****   {
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 31


 736:Drivers/CMSIS/Include/cmsis_gcc.h ****     const uint32_t max = ((1U << sat) - 1U);
 737:Drivers/CMSIS/Include/cmsis_gcc.h ****     if (val > (int32_t)max)
 738:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 739:Drivers/CMSIS/Include/cmsis_gcc.h ****       return max;
 740:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 741:Drivers/CMSIS/Include/cmsis_gcc.h ****     else if (val < 0)
 742:Drivers/CMSIS/Include/cmsis_gcc.h ****     {
 743:Drivers/CMSIS/Include/cmsis_gcc.h ****       return 0U;
 744:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 745:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 746:Drivers/CMSIS/Include/cmsis_gcc.h ****   return (uint32_t)val;
 747:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 748:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 749:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_7M__      ) && (__ARM_ARCH_7M__      == 1)) || \
 750:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_7EM__     ) && (__ARM_ARCH_7EM__     == 1)) || \
 751:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1))    ) */
 752:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 753:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 754:Drivers/CMSIS/Include/cmsis_gcc.h **** #if ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 755:Drivers/CMSIS/Include/cmsis_gcc.h ****      (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    )
 756:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 757:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (8 bit)
 758:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB instruction for 8 bit value.
 759:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 760:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 761:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 762:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAB(volatile uint8_t *ptr)
 763:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 764:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 765:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 766:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldab %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 767:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 768:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 769:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 770:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 771:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 772:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (16 bit)
 773:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH instruction for 16 bit values.
 774:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 775:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 776:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 777:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAH(volatile uint16_t *ptr)
 778:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 779:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 780:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 781:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldah %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 782:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 783:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 784:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 785:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 786:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 787:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire (32 bit)
 788:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA instruction for 32 bit values.
 789:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 790:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 791:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 792:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDA(volatile uint32_t *ptr)
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 32


 793:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 794:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 795:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 796:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("lda %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 797:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 798:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 799:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 800:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 801:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 802:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (8 bit)
 803:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB instruction for 8 bit values.
 804:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 805:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 806:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 807:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLB(uint8_t value, volatile uint8_t *ptr)
 808:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 809:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlb %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 810:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 811:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 812:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 813:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 814:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (16 bit)
 815:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH instruction for 16 bit values.
 816:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 817:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 818:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 819:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STLH(uint16_t value, volatile uint16_t *ptr)
 820:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 821:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlh %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 822:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 823:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 824:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 825:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 826:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release (32 bit)
 827:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL instruction for 32 bit values.
 828:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 829:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 830:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 831:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __STL(uint32_t value, volatile uint32_t *ptr)
 832:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 833:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stl %1, %0" : "=Q" (*ptr) : "r" ((uint32_t)value) : "memory" );
 834:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 835:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 836:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 837:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 838:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (8 bit)
 839:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAB exclusive instruction for 8 bit value.
 840:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 841:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return             value of type uint8_t at (*ptr)
 842:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 843:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint8_t __LDAEXB(volatile uint8_t *ptr)
 844:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 845:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 846:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 847:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexb %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 848:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint8_t) result);
 849:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 33


 850:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 851:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 852:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 853:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (16 bit)
 854:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDAH exclusive instruction for 16 bit values.
 855:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 856:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint16_t at (*ptr)
 857:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 858:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint16_t __LDAEXH(volatile uint16_t *ptr)
 859:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 860:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 861:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 862:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaexh %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 863:Drivers/CMSIS/Include/cmsis_gcc.h ****    return ((uint16_t) result);
 864:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 865:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 866:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 867:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 868:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Load-Acquire Exclusive (32 bit)
 869:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a LDA exclusive instruction for 32 bit values.
 870:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to data
 871:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return        value of type uint32_t at (*ptr)
 872:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 873:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __LDAEX(volatile uint32_t *ptr)
 874:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 875:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t result;
 876:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 877:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("ldaex %0, %1" : "=r" (result) : "Q" (*ptr) : "memory" );
 878:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 879:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 880:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 881:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 882:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 883:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (8 bit)
 884:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLB exclusive instruction for 8 bit values.
 885:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 886:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 887:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 888:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 889:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 890:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXB(uint8_t value, volatile uint8_t *ptr)
 891:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 892:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 893:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 894:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexb %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 895:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 896:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 897:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 898:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 899:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 900:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (16 bit)
 901:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STLH exclusive instruction for 16 bit values.
 902:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 903:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 904:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 905:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 906:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 34


 907:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEXH(uint16_t value, volatile uint16_t *ptr)
 908:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 909:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 910:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 911:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlexh %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "mem
 912:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 913:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 914:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 915:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 916:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 917:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Store-Release Exclusive (32 bit)
 918:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Executes a STL exclusive instruction for 32 bit values.
 919:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]  value  Value to store
 920:Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    ptr  Pointer to location
 921:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          0  Function succeeded
 922:Drivers/CMSIS/Include/cmsis_gcc.h ****   \return          1  Function failed
 923:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 924:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE uint32_t __STLEX(uint32_t value, volatile uint32_t *ptr)
 925:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 926:Drivers/CMSIS/Include/cmsis_gcc.h ****    uint32_t result;
 927:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 928:Drivers/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("stlex %0, %2, %1" : "=&r" (result), "=Q" (*ptr) : "r" ((uint32_t)value) : "memo
 929:Drivers/CMSIS/Include/cmsis_gcc.h ****    return(result);
 930:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 931:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 932:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* ((defined (__ARM_ARCH_8M_MAIN__ ) && (__ARM_ARCH_8M_MAIN__ == 1)) || \
 933:Drivers/CMSIS/Include/cmsis_gcc.h ****            (defined (__ARM_ARCH_8M_BASE__ ) && (__ARM_ARCH_8M_BASE__ == 1))    ) */
 934:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 935:Drivers/CMSIS/Include/cmsis_gcc.h **** /*@}*/ /* end of group CMSIS_Core_InstructionInterface */
 936:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 937:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 938:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 939:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 940:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 941:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 942:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 943:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 944:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 945:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 946:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing special-purpose register PRIMASK.
 947:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 948:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 949:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 950:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 951:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 952:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 953:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 954:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 955:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 956:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 957:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting special-purpose register PRIMASK.
 958:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 959:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 960:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 489              		.loc 2 960 27 view .LVU142
 490              	.LBB11:
 961:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 35


 962:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 491              		.loc 2 962 3 view .LVU143
 492              		.syntax unified
 493              	@ 962 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 494 0000 72B6     		cpsid i
 495              	@ 0 "" 2
 496              		.thumb
 497              		.syntax unified
 498              	.L20:
 499              	.LBE11:
 500              	.LBE10:
 494:Core/Src/main.c ****   while (1)
 501              		.loc 1 494 3 discriminator 1 view .LVU144
 495:Core/Src/main.c ****   {
 496:Core/Src/main.c ****   }
 502              		.loc 1 496 3 discriminator 1 view .LVU145
 494:Core/Src/main.c ****   while (1)
 503              		.loc 1 494 9 discriminator 1 view .LVU146
 504 0002 FEE7     		b	.L20
 505              		.cfi_endproc
 506              	.LFE147:
 508              		.section	.text.MX_I2C1_Init,"ax",%progbits
 509              		.align	1
 510              		.syntax unified
 511              		.thumb
 512              		.thumb_func
 514              	MX_I2C1_Init:
 515              	.LFB140:
 225:Core/Src/main.c **** 
 516              		.loc 1 225 1 view -0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520 0000 08B5     		push	{r3, lr}
 521              	.LCFI6:
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 3, -8
 524              		.cfi_offset 14, -4
 234:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 525              		.loc 1 234 3 view .LVU148
 234:Core/Src/main.c ****   hi2c1.Init.ClockSpeed = 100000;
 526              		.loc 1 234 18 is_stmt 0 view .LVU149
 527 0002 0A48     		ldr	r0, .L25
 528 0004 0A4B     		ldr	r3, .L25+4
 529 0006 0360     		str	r3, [r0]
 235:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 530              		.loc 1 235 3 is_stmt 1 view .LVU150
 235:Core/Src/main.c ****   hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 531              		.loc 1 235 25 is_stmt 0 view .LVU151
 532 0008 0A4B     		ldr	r3, .L25+8
 533 000a 4360     		str	r3, [r0, #4]
 236:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 534              		.loc 1 236 3 is_stmt 1 view .LVU152
 236:Core/Src/main.c ****   hi2c1.Init.OwnAddress1 = 0;
 535              		.loc 1 236 24 is_stmt 0 view .LVU153
 536 000c 0023     		movs	r3, #0
 537 000e 8360     		str	r3, [r0, #8]
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 36


 237:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 538              		.loc 1 237 3 is_stmt 1 view .LVU154
 237:Core/Src/main.c ****   hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 539              		.loc 1 237 26 is_stmt 0 view .LVU155
 540 0010 C360     		str	r3, [r0, #12]
 238:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 541              		.loc 1 238 3 is_stmt 1 view .LVU156
 238:Core/Src/main.c ****   hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 542              		.loc 1 238 29 is_stmt 0 view .LVU157
 543 0012 4FF48042 		mov	r2, #16384
 544 0016 0261     		str	r2, [r0, #16]
 239:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 545              		.loc 1 239 3 is_stmt 1 view .LVU158
 239:Core/Src/main.c ****   hi2c1.Init.OwnAddress2 = 0;
 546              		.loc 1 239 30 is_stmt 0 view .LVU159
 547 0018 4361     		str	r3, [r0, #20]
 240:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 548              		.loc 1 240 3 is_stmt 1 view .LVU160
 240:Core/Src/main.c ****   hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 549              		.loc 1 240 26 is_stmt 0 view .LVU161
 550 001a 8361     		str	r3, [r0, #24]
 241:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 551              		.loc 1 241 3 is_stmt 1 view .LVU162
 241:Core/Src/main.c ****   hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 552              		.loc 1 241 30 is_stmt 0 view .LVU163
 553 001c C361     		str	r3, [r0, #28]
 242:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 554              		.loc 1 242 3 is_stmt 1 view .LVU164
 242:Core/Src/main.c ****   if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 555              		.loc 1 242 28 is_stmt 0 view .LVU165
 556 001e 0362     		str	r3, [r0, #32]
 243:Core/Src/main.c ****   {
 557              		.loc 1 243 3 is_stmt 1 view .LVU166
 243:Core/Src/main.c ****   {
 558              		.loc 1 243 7 is_stmt 0 view .LVU167
 559 0020 FFF7FEFF 		bl	HAL_I2C_Init
 560              	.LVL23:
 243:Core/Src/main.c ****   {
 561              		.loc 1 243 6 view .LVU168
 562 0024 00B9     		cbnz	r0, .L24
 251:Core/Src/main.c **** 
 563              		.loc 1 251 1 view .LVU169
 564 0026 08BD     		pop	{r3, pc}
 565              	.L24:
 245:Core/Src/main.c ****   }
 566              		.loc 1 245 5 is_stmt 1 view .LVU170
 567 0028 FFF7FEFF 		bl	Error_Handler
 568              	.LVL24:
 569              	.L26:
 570              		.align	2
 571              	.L25:
 572 002c 00000000 		.word	.LANCHOR0
 573 0030 00540040 		.word	1073763328
 574 0034 A0860100 		.word	100000
 575              		.cfi_endproc
 576              	.LFE140:
 578              		.section	.text.MX_I2S3_Init,"ax",%progbits
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 37


 579              		.align	1
 580              		.syntax unified
 581              		.thumb
 582              		.thumb_func
 584              	MX_I2S3_Init:
 585              	.LFB141:
 259:Core/Src/main.c **** 
 586              		.loc 1 259 1 view -0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590 0000 08B5     		push	{r3, lr}
 591              	.LCFI7:
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 3, -8
 594              		.cfi_offset 14, -4
 268:Core/Src/main.c ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 595              		.loc 1 268 3 view .LVU172
 268:Core/Src/main.c ****   hi2s3.Init.Mode = I2S_MODE_MASTER_TX;
 596              		.loc 1 268 18 is_stmt 0 view .LVU173
 597 0002 0A48     		ldr	r0, .L31
 598 0004 0A4B     		ldr	r3, .L31+4
 599 0006 0360     		str	r3, [r0]
 269:Core/Src/main.c ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 600              		.loc 1 269 3 is_stmt 1 view .LVU174
 269:Core/Src/main.c ****   hi2s3.Init.Standard = I2S_STANDARD_PHILIPS;
 601              		.loc 1 269 19 is_stmt 0 view .LVU175
 602 0008 4FF40072 		mov	r2, #512
 603 000c 4260     		str	r2, [r0, #4]
 270:Core/Src/main.c ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 604              		.loc 1 270 3 is_stmt 1 view .LVU176
 270:Core/Src/main.c ****   hi2s3.Init.DataFormat = I2S_DATAFORMAT_16B;
 605              		.loc 1 270 23 is_stmt 0 view .LVU177
 606 000e 0023     		movs	r3, #0
 607 0010 8360     		str	r3, [r0, #8]
 271:Core/Src/main.c ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 608              		.loc 1 271 3 is_stmt 1 view .LVU178
 271:Core/Src/main.c ****   hi2s3.Init.MCLKOutput = I2S_MCLKOUTPUT_ENABLE;
 609              		.loc 1 271 25 is_stmt 0 view .LVU179
 610 0012 C360     		str	r3, [r0, #12]
 272:Core/Src/main.c ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 611              		.loc 1 272 3 is_stmt 1 view .LVU180
 272:Core/Src/main.c ****   hi2s3.Init.AudioFreq = I2S_AUDIOFREQ_96K;
 612              		.loc 1 272 25 is_stmt 0 view .LVU181
 613 0014 0261     		str	r2, [r0, #16]
 273:Core/Src/main.c ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 614              		.loc 1 273 3 is_stmt 1 view .LVU182
 273:Core/Src/main.c ****   hi2s3.Init.CPOL = I2S_CPOL_LOW;
 615              		.loc 1 273 24 is_stmt 0 view .LVU183
 616 0016 074A     		ldr	r2, .L31+8
 617 0018 4261     		str	r2, [r0, #20]
 274:Core/Src/main.c ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 618              		.loc 1 274 3 is_stmt 1 view .LVU184
 274:Core/Src/main.c ****   hi2s3.Init.ClockSource = I2S_CLOCK_PLL;
 619              		.loc 1 274 19 is_stmt 0 view .LVU185
 620 001a 8361     		str	r3, [r0, #24]
 275:Core/Src/main.c ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 38


 621              		.loc 1 275 3 is_stmt 1 view .LVU186
 275:Core/Src/main.c ****   hi2s3.Init.FullDuplexMode = I2S_FULLDUPLEXMODE_DISABLE;
 622              		.loc 1 275 26 is_stmt 0 view .LVU187
 623 001c C361     		str	r3, [r0, #28]
 276:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 624              		.loc 1 276 3 is_stmt 1 view .LVU188
 276:Core/Src/main.c ****   if (HAL_I2S_Init(&hi2s3) != HAL_OK)
 625              		.loc 1 276 29 is_stmt 0 view .LVU189
 626 001e 0362     		str	r3, [r0, #32]
 277:Core/Src/main.c ****   {
 627              		.loc 1 277 3 is_stmt 1 view .LVU190
 277:Core/Src/main.c ****   {
 628              		.loc 1 277 7 is_stmt 0 view .LVU191
 629 0020 FFF7FEFF 		bl	HAL_I2S_Init
 630              	.LVL25:
 277:Core/Src/main.c ****   {
 631              		.loc 1 277 6 view .LVU192
 632 0024 00B9     		cbnz	r0, .L30
 285:Core/Src/main.c **** 
 633              		.loc 1 285 1 view .LVU193
 634 0026 08BD     		pop	{r3, pc}
 635              	.L30:
 279:Core/Src/main.c ****   }
 636              		.loc 1 279 5 is_stmt 1 view .LVU194
 637 0028 FFF7FEFF 		bl	Error_Handler
 638              	.LVL26:
 639              	.L32:
 640              		.align	2
 641              	.L31:
 642 002c 00000000 		.word	.LANCHOR1
 643 0030 003C0040 		.word	1073757184
 644 0034 00770100 		.word	96000
 645              		.cfi_endproc
 646              	.LFE141:
 648              		.section	.text.MX_SPI1_Init,"ax",%progbits
 649              		.align	1
 650              		.syntax unified
 651              		.thumb
 652              		.thumb_func
 654              	MX_SPI1_Init:
 655              	.LFB142:
 293:Core/Src/main.c **** 
 656              		.loc 1 293 1 view -0
 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660 0000 08B5     		push	{r3, lr}
 661              	.LCFI8:
 662              		.cfi_def_cfa_offset 8
 663              		.cfi_offset 3, -8
 664              		.cfi_offset 14, -4
 303:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 665              		.loc 1 303 3 view .LVU196
 303:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 666              		.loc 1 303 18 is_stmt 0 view .LVU197
 667 0002 0D48     		ldr	r0, .L37
 668 0004 0D4B     		ldr	r3, .L37+4
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 39


 669 0006 0360     		str	r3, [r0]
 304:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 670              		.loc 1 304 3 is_stmt 1 view .LVU198
 304:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 671              		.loc 1 304 19 is_stmt 0 view .LVU199
 672 0008 4FF48273 		mov	r3, #260
 673 000c 4360     		str	r3, [r0, #4]
 305:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 674              		.loc 1 305 3 is_stmt 1 view .LVU200
 305:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 675              		.loc 1 305 24 is_stmt 0 view .LVU201
 676 000e 0023     		movs	r3, #0
 677 0010 8360     		str	r3, [r0, #8]
 306:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 678              		.loc 1 306 3 is_stmt 1 view .LVU202
 306:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 679              		.loc 1 306 23 is_stmt 0 view .LVU203
 680 0012 C360     		str	r3, [r0, #12]
 307:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 681              		.loc 1 307 3 is_stmt 1 view .LVU204
 307:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 682              		.loc 1 307 26 is_stmt 0 view .LVU205
 683 0014 0361     		str	r3, [r0, #16]
 308:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 684              		.loc 1 308 3 is_stmt 1 view .LVU206
 308:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 685              		.loc 1 308 23 is_stmt 0 view .LVU207
 686 0016 4361     		str	r3, [r0, #20]
 309:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 687              		.loc 1 309 3 is_stmt 1 view .LVU208
 309:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 688              		.loc 1 309 18 is_stmt 0 view .LVU209
 689 0018 4FF40072 		mov	r2, #512
 690 001c 8261     		str	r2, [r0, #24]
 310:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 691              		.loc 1 310 3 is_stmt 1 view .LVU210
 310:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 692              		.loc 1 310 32 is_stmt 0 view .LVU211
 693 001e C361     		str	r3, [r0, #28]
 311:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 694              		.loc 1 311 3 is_stmt 1 view .LVU212
 311:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 695              		.loc 1 311 23 is_stmt 0 view .LVU213
 696 0020 0362     		str	r3, [r0, #32]
 312:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 697              		.loc 1 312 3 is_stmt 1 view .LVU214
 312:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 698              		.loc 1 312 21 is_stmt 0 view .LVU215
 699 0022 4362     		str	r3, [r0, #36]
 313:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 700              		.loc 1 313 3 is_stmt 1 view .LVU216
 313:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 10;
 701              		.loc 1 313 29 is_stmt 0 view .LVU217
 702 0024 8362     		str	r3, [r0, #40]
 314:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 703              		.loc 1 314 3 is_stmt 1 view .LVU218
 314:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 40


 704              		.loc 1 314 28 is_stmt 0 view .LVU219
 705 0026 0A23     		movs	r3, #10
 706 0028 C362     		str	r3, [r0, #44]
 315:Core/Src/main.c ****   {
 707              		.loc 1 315 3 is_stmt 1 view .LVU220
 315:Core/Src/main.c ****   {
 708              		.loc 1 315 7 is_stmt 0 view .LVU221
 709 002a FFF7FEFF 		bl	HAL_SPI_Init
 710              	.LVL27:
 315:Core/Src/main.c ****   {
 711              		.loc 1 315 6 view .LVU222
 712 002e 00B9     		cbnz	r0, .L36
 323:Core/Src/main.c **** 
 713              		.loc 1 323 1 view .LVU223
 714 0030 08BD     		pop	{r3, pc}
 715              	.L36:
 317:Core/Src/main.c ****   }
 716              		.loc 1 317 5 is_stmt 1 view .LVU224
 717 0032 FFF7FEFF 		bl	Error_Handler
 718              	.LVL28:
 719              	.L38:
 720 0036 00BF     		.align	2
 721              	.L37:
 722 0038 00000000 		.word	.LANCHOR2
 723 003c 00300140 		.word	1073819648
 724              		.cfi_endproc
 725              	.LFE142:
 727              		.section	.text.SystemClock_Config,"ax",%progbits
 728              		.align	1
 729              		.global	SystemClock_Config
 730              		.syntax unified
 731              		.thumb
 732              		.thumb_func
 734              	SystemClock_Config:
 735              	.LFB139:
 179:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 736              		.loc 1 179 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 80
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740 0000 00B5     		push	{lr}
 741              	.LCFI9:
 742              		.cfi_def_cfa_offset 4
 743              		.cfi_offset 14, -4
 744 0002 95B0     		sub	sp, sp, #84
 745              	.LCFI10:
 746              		.cfi_def_cfa_offset 88
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 747              		.loc 1 180 3 view .LVU226
 180:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 748              		.loc 1 180 22 is_stmt 0 view .LVU227
 749 0004 3022     		movs	r2, #48
 750 0006 0021     		movs	r1, #0
 751 0008 08A8     		add	r0, sp, #32
 752 000a FFF7FEFF 		bl	memset
 753              	.LVL29:
 181:Core/Src/main.c **** 
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 41


 754              		.loc 1 181 3 is_stmt 1 view .LVU228
 181:Core/Src/main.c **** 
 755              		.loc 1 181 22 is_stmt 0 view .LVU229
 756 000e 0023     		movs	r3, #0
 757 0010 0393     		str	r3, [sp, #12]
 758 0012 0493     		str	r3, [sp, #16]
 759 0014 0593     		str	r3, [sp, #20]
 760 0016 0693     		str	r3, [sp, #24]
 761 0018 0793     		str	r3, [sp, #28]
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 762              		.loc 1 185 3 is_stmt 1 view .LVU230
 763              	.LBB12:
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 764              		.loc 1 185 3 view .LVU231
 765 001a 0193     		str	r3, [sp, #4]
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 766              		.loc 1 185 3 view .LVU232
 767 001c 214A     		ldr	r2, .L45
 768 001e 116C     		ldr	r1, [r2, #64]
 769 0020 41F08051 		orr	r1, r1, #268435456
 770 0024 1164     		str	r1, [r2, #64]
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 771              		.loc 1 185 3 view .LVU233
 772 0026 126C     		ldr	r2, [r2, #64]
 773 0028 02F08052 		and	r2, r2, #268435456
 774 002c 0192     		str	r2, [sp, #4]
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 775              		.loc 1 185 3 view .LVU234
 776 002e 019A     		ldr	r2, [sp, #4]
 777              	.LBE12:
 185:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 778              		.loc 1 185 3 view .LVU235
 186:Core/Src/main.c **** 
 779              		.loc 1 186 3 view .LVU236
 780              	.LBB13:
 186:Core/Src/main.c **** 
 781              		.loc 1 186 3 view .LVU237
 782 0030 0293     		str	r3, [sp, #8]
 186:Core/Src/main.c **** 
 783              		.loc 1 186 3 view .LVU238
 784 0032 1D4B     		ldr	r3, .L45+4
 785 0034 1A68     		ldr	r2, [r3]
 786 0036 42F48042 		orr	r2, r2, #16384
 787 003a 1A60     		str	r2, [r3]
 186:Core/Src/main.c **** 
 788              		.loc 1 186 3 view .LVU239
 789 003c 1B68     		ldr	r3, [r3]
 790 003e 03F48043 		and	r3, r3, #16384
 791 0042 0293     		str	r3, [sp, #8]
 186:Core/Src/main.c **** 
 792              		.loc 1 186 3 view .LVU240
 793 0044 029B     		ldr	r3, [sp, #8]
 794              	.LBE13:
 186:Core/Src/main.c **** 
 795              		.loc 1 186 3 view .LVU241
 191:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 796              		.loc 1 191 3 view .LVU242
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 42


 191:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 797              		.loc 1 191 36 is_stmt 0 view .LVU243
 798 0046 0123     		movs	r3, #1
 799 0048 0893     		str	r3, [sp, #32]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 800              		.loc 1 192 3 is_stmt 1 view .LVU244
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 801              		.loc 1 192 30 is_stmt 0 view .LVU245
 802 004a 4FF48033 		mov	r3, #65536
 803 004e 0993     		str	r3, [sp, #36]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 804              		.loc 1 193 3 is_stmt 1 view .LVU246
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 805              		.loc 1 193 34 is_stmt 0 view .LVU247
 806 0050 0223     		movs	r3, #2
 807 0052 0E93     		str	r3, [sp, #56]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 808              		.loc 1 194 3 is_stmt 1 view .LVU248
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 8;
 809              		.loc 1 194 35 is_stmt 0 view .LVU249
 810 0054 4FF48002 		mov	r2, #4194304
 811 0058 0F92     		str	r2, [sp, #60]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 812              		.loc 1 195 3 is_stmt 1 view .LVU250
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 336;
 813              		.loc 1 195 30 is_stmt 0 view .LVU251
 814 005a 0822     		movs	r2, #8
 815 005c 1092     		str	r2, [sp, #64]
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 816              		.loc 1 196 3 is_stmt 1 view .LVU252
 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 817              		.loc 1 196 30 is_stmt 0 view .LVU253
 818 005e 4FF4A872 		mov	r2, #336
 819 0062 1192     		str	r2, [sp, #68]
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 820              		.loc 1 197 3 is_stmt 1 view .LVU254
 197:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 7;
 821              		.loc 1 197 30 is_stmt 0 view .LVU255
 822 0064 1293     		str	r3, [sp, #72]
 198:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 823              		.loc 1 198 3 is_stmt 1 view .LVU256
 198:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 824              		.loc 1 198 30 is_stmt 0 view .LVU257
 825 0066 0723     		movs	r3, #7
 826 0068 1393     		str	r3, [sp, #76]
 199:Core/Src/main.c ****   {
 827              		.loc 1 199 3 is_stmt 1 view .LVU258
 199:Core/Src/main.c ****   {
 828              		.loc 1 199 7 is_stmt 0 view .LVU259
 829 006a 08A8     		add	r0, sp, #32
 830 006c FFF7FEFF 		bl	HAL_RCC_OscConfig
 831              	.LVL30:
 199:Core/Src/main.c ****   {
 832              		.loc 1 199 6 view .LVU260
 833 0070 98B9     		cbnz	r0, .L43
 206:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 834              		.loc 1 206 3 is_stmt 1 view .LVU261
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 43


 206:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 835              		.loc 1 206 31 is_stmt 0 view .LVU262
 836 0072 0F23     		movs	r3, #15
 837 0074 0393     		str	r3, [sp, #12]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 838              		.loc 1 208 3 is_stmt 1 view .LVU263
 208:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 839              		.loc 1 208 34 is_stmt 0 view .LVU264
 840 0076 0223     		movs	r3, #2
 841 0078 0493     		str	r3, [sp, #16]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 842              		.loc 1 209 3 is_stmt 1 view .LVU265
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV4;
 843              		.loc 1 209 35 is_stmt 0 view .LVU266
 844 007a 0023     		movs	r3, #0
 845 007c 0593     		str	r3, [sp, #20]
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 846              		.loc 1 210 3 is_stmt 1 view .LVU267
 210:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV2;
 847              		.loc 1 210 36 is_stmt 0 view .LVU268
 848 007e 4FF4A053 		mov	r3, #5120
 849 0082 0693     		str	r3, [sp, #24]
 211:Core/Src/main.c **** 
 850              		.loc 1 211 3 is_stmt 1 view .LVU269
 211:Core/Src/main.c **** 
 851              		.loc 1 211 36 is_stmt 0 view .LVU270
 852 0084 4FF48053 		mov	r3, #4096
 853 0088 0793     		str	r3, [sp, #28]
 213:Core/Src/main.c ****   {
 854              		.loc 1 213 3 is_stmt 1 view .LVU271
 213:Core/Src/main.c ****   {
 855              		.loc 1 213 7 is_stmt 0 view .LVU272
 856 008a 0521     		movs	r1, #5
 857 008c 03A8     		add	r0, sp, #12
 858 008e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 859              	.LVL31:
 213:Core/Src/main.c ****   {
 860              		.loc 1 213 6 view .LVU273
 861 0092 20B9     		cbnz	r0, .L44
 217:Core/Src/main.c **** 
 862              		.loc 1 217 1 view .LVU274
 863 0094 15B0     		add	sp, sp, #84
 864              	.LCFI11:
 865              		.cfi_remember_state
 866              		.cfi_def_cfa_offset 4
 867              		@ sp needed
 868 0096 5DF804FB 		ldr	pc, [sp], #4
 869              	.L43:
 870              	.LCFI12:
 871              		.cfi_restore_state
 201:Core/Src/main.c ****   }
 872              		.loc 1 201 5 is_stmt 1 view .LVU275
 873 009a FFF7FEFF 		bl	Error_Handler
 874              	.LVL32:
 875              	.L44:
 215:Core/Src/main.c ****   }
 876              		.loc 1 215 5 view .LVU276
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 44


 877 009e FFF7FEFF 		bl	Error_Handler
 878              	.LVL33:
 879              	.L46:
 880 00a2 00BF     		.align	2
 881              	.L45:
 882 00a4 00380240 		.word	1073887232
 883 00a8 00700040 		.word	1073770496
 884              		.cfi_endproc
 885              	.LFE139:
 887              		.section	.text.main,"ax",%progbits
 888              		.align	1
 889              		.global	main
 890              		.syntax unified
 891              		.thumb
 892              		.thumb_func
 894              	main:
 895              	.LFB138:
  93:Core/Src/main.c **** 
 896              		.loc 1 93 1 view -0
 897              		.cfi_startproc
 898              		@ Volatile: function does not return.
 899              		@ args = 0, pretend = 0, frame = 0
 900              		@ frame_needed = 0, uses_anonymous_args = 0
 901 0000 08B5     		push	{r3, lr}
 902              	.LCFI13:
 903              		.cfi_def_cfa_offset 8
 904              		.cfi_offset 3, -8
 905              		.cfi_offset 14, -4
 102:Core/Src/main.c **** 
 906              		.loc 1 102 3 view .LVU278
 907 0002 FFF7FEFF 		bl	HAL_Init
 908              	.LVL34:
 109:Core/Src/main.c **** 
 909              		.loc 1 109 3 view .LVU279
 910 0006 FFF7FEFF 		bl	SystemClock_Config
 911              	.LVL35:
 116:Core/Src/main.c ****   MX_I2C1_Init();
 912              		.loc 1 116 3 view .LVU280
 913 000a FFF7FEFF 		bl	MX_GPIO_Init
 914              	.LVL36:
 117:Core/Src/main.c ****   MX_I2S3_Init();
 915              		.loc 1 117 3 view .LVU281
 916 000e FFF7FEFF 		bl	MX_I2C1_Init
 917              	.LVL37:
 118:Core/Src/main.c ****   MX_SPI1_Init();
 918              		.loc 1 118 3 view .LVU282
 919 0012 FFF7FEFF 		bl	MX_I2S3_Init
 920              	.LVL38:
 119:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 921              		.loc 1 119 3 view .LVU283
 922 0016 FFF7FEFF 		bl	MX_SPI1_Init
 923              	.LVL39:
 125:Core/Src/main.c **** 
 924              		.loc 1 125 3 view .LVU284
 925 001a FFF7FEFF 		bl	osKernelInitialize
 926              	.LVL40:
 145:Core/Src/main.c **** 
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 45


 927              		.loc 1 145 3 view .LVU285
 145:Core/Src/main.c **** 
 928              		.loc 1 145 19 is_stmt 0 view .LVU286
 929 001e 084A     		ldr	r2, .L50
 930 0020 0021     		movs	r1, #0
 931 0022 0848     		ldr	r0, .L50+4
 932 0024 FFF7FEFF 		bl	osThreadNew
 933              	.LVL41:
 145:Core/Src/main.c **** 
 934              		.loc 1 145 17 view .LVU287
 935 0028 074B     		ldr	r3, .L50+8
 936 002a 1860     		str	r0, [r3]
 148:Core/Src/main.c **** 
 937              		.loc 1 148 3 is_stmt 1 view .LVU288
 148:Core/Src/main.c **** 
 938              		.loc 1 148 19 is_stmt 0 view .LVU289
 939 002c 074A     		ldr	r2, .L50+12
 940 002e 0021     		movs	r1, #0
 941 0030 0748     		ldr	r0, .L50+16
 942 0032 FFF7FEFF 		bl	osThreadNew
 943              	.LVL42:
 148:Core/Src/main.c **** 
 944              		.loc 1 148 17 view .LVU290
 945 0036 074B     		ldr	r3, .L50+20
 946 0038 1860     		str	r0, [r3]
 159:Core/Src/main.c **** 
 947              		.loc 1 159 3 is_stmt 1 view .LVU291
 948 003a FFF7FEFF 		bl	osKernelStart
 949              	.LVL43:
 950              	.L48:
 165:Core/Src/main.c ****   {
 951              		.loc 1 165 3 discriminator 1 view .LVU292
 170:Core/Src/main.c ****   /* USER CODE END 3 */
 952              		.loc 1 170 3 discriminator 1 view .LVU293
 165:Core/Src/main.c ****   {
 953              		.loc 1 165 9 discriminator 1 view .LVU294
 954 003e FEE7     		b	.L48
 955              	.L51:
 956              		.align	2
 957              	.L50:
 958 0040 00000000 		.word	.LANCHOR3
 959 0044 00000000 		.word	StartBlink01
 960 0048 00000000 		.word	.LANCHOR4
 961 004c 00000000 		.word	.LANCHOR5
 962 0050 00000000 		.word	StartBlink02
 963 0054 00000000 		.word	.LANCHOR6
 964              		.cfi_endproc
 965              	.LFE138:
 967              		.global	blink02_attributes
 968              		.section	.rodata.str1.4,"aMS",%progbits,1
 969              		.align	2
 970              	.LC0:
 971 0000 626C696E 		.ascii	"blink02\000"
 971      6B303200 
 972              		.global	blink02Handle
 973              		.global	blink01_attributes
 974              		.align	2
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 46


 975              	.LC1:
 976 0008 626C696E 		.ascii	"blink01\000"
 976      6B303100 
 977              		.global	blink01Handle
 978              		.global	hspi1
 979              		.global	hi2s3
 980              		.global	hi2c1
 981              		.section	.bss.blink01Handle,"aw",%nobits
 982              		.align	2
 983              		.set	.LANCHOR4,. + 0
 986              	blink01Handle:
 987 0000 00000000 		.space	4
 988              		.section	.bss.blink02Handle,"aw",%nobits
 989              		.align	2
 990              		.set	.LANCHOR6,. + 0
 993              	blink02Handle:
 994 0000 00000000 		.space	4
 995              		.section	.bss.hi2c1,"aw",%nobits
 996              		.align	2
 997              		.set	.LANCHOR0,. + 0
 1000              	hi2c1:
 1001 0000 00000000 		.space	84
 1001      00000000 
 1001      00000000 
 1001      00000000 
 1001      00000000 
 1002              		.section	.bss.hi2s3,"aw",%nobits
 1003              		.align	2
 1004              		.set	.LANCHOR1,. + 0
 1007              	hi2s3:
 1008 0000 00000000 		.space	72
 1008      00000000 
 1008      00000000 
 1008      00000000 
 1008      00000000 
 1009              		.section	.bss.hspi1,"aw",%nobits
 1010              		.align	2
 1011              		.set	.LANCHOR2,. + 0
 1014              	hspi1:
 1015 0000 00000000 		.space	88
 1015      00000000 
 1015      00000000 
 1015      00000000 
 1015      00000000 
 1016              		.section	.rodata.blink01_attributes,"a"
 1017              		.align	2
 1018              		.set	.LANCHOR3,. + 0
 1021              	blink01_attributes:
 1022 0000 08000000 		.word	.LC1
 1023 0004 00000000 		.space	16
 1023      00000000 
 1023      00000000 
 1023      00000000 
 1024 0014 00020000 		.word	512
 1025 0018 18000000 		.word	24
 1026 001c 00000000 		.space	8
 1026      00000000 
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 47


 1027              		.section	.rodata.blink02_attributes,"a"
 1028              		.align	2
 1029              		.set	.LANCHOR5,. + 0
 1032              	blink02_attributes:
 1033 0000 00000000 		.word	.LC0
 1034 0004 00000000 		.space	16
 1034      00000000 
 1034      00000000 
 1034      00000000 
 1035 0014 00020000 		.word	512
 1036 0018 08000000 		.word	8
 1037 001c 00000000 		.space	8
 1037      00000000 
 1038              		.text
 1039              	.Letext0:
 1040              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1041              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 1042              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f407xx.h"
 1043              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1044              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1045              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1046              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1047              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1048              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2c.h"
 1049              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_i2s.h"
 1050              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_spi.h"
 1051              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1052              		.file 15 "Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS_V2/cmsis_os2.h"
 1053              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1054              		.file 17 "USB_HOST/App/usb_host.h"
 1055              		.file 18 "<built-in>"
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 48


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:20     .text.MX_GPIO_Init:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:25     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:339    .text.MX_GPIO_Init:00000170 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:349    .text.StartBlink01:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:355    .text.StartBlink01:00000000 StartBlink01
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:388    .text.StartBlink01:0000001c $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:393    .text.StartBlink02:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:399    .text.StartBlink02:00000000 StartBlink02
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:426    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:432    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:466    .text.HAL_TIM_PeriodElapsedCallback:00000014 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:471    .text.Error_Handler:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:477    .text.Error_Handler:00000000 Error_Handler
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:509    .text.MX_I2C1_Init:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:514    .text.MX_I2C1_Init:00000000 MX_I2C1_Init
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:572    .text.MX_I2C1_Init:0000002c $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:579    .text.MX_I2S3_Init:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:584    .text.MX_I2S3_Init:00000000 MX_I2S3_Init
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:642    .text.MX_I2S3_Init:0000002c $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:649    .text.MX_SPI1_Init:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:654    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:722    .text.MX_SPI1_Init:00000038 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:728    .text.SystemClock_Config:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:734    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:882    .text.SystemClock_Config:000000a4 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:888    .text.main:00000000 $t
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:894    .text.main:00000000 main
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:958    .text.main:00000040 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:1032   .rodata.blink02_attributes:00000000 blink02_attributes
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:969    .rodata.str1.4:00000000 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:993    .bss.blink02Handle:00000000 blink02Handle
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:1021   .rodata.blink01_attributes:00000000 blink01_attributes
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:986    .bss.blink01Handle:00000000 blink01Handle
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:1014   .bss.hspi1:00000000 hspi1
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:1007   .bss.hi2s3:00000000 hi2s3
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:1000   .bss.hi2c1:00000000 hi2c1
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:982    .bss.blink01Handle:00000000 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:989    .bss.blink02Handle:00000000 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:996    .bss.hi2c1:00000000 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:1003   .bss.hi2s3:00000000 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:1010   .bss.hspi1:00000000 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:1017   .rodata.blink01_attributes:00000000 $d
C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s:1028   .rodata.blink02_attributes:00000000 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
MX_USB_HOST_Init
HAL_GPIO_TogglePin
osDelay
HAL_IncTick
HAL_I2C_Init
HAL_I2S_Init
HAL_SPI_Init
memset
ARM GAS  C:\Users\ashto\AppData\Local\Temp\ccN4fXtn.s 			page 49


HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
osKernelInitialize
osThreadNew
osKernelStart
